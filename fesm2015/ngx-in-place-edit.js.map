{"version":3,"file":"ngx-in-place-edit.js","sources":["../../../projects/ngx-in-place-edit/src/lib/directives/view-mode.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/edit-mode.directive.ts","../../../projects/ngx-in-place-edit/src/lib/editable/editable.config.ts","../../../projects/ngx-in-place-edit/src/lib/editable/editable.component.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-save.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-cancel.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-focus.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-on-enter.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-on-escape.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-group.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-group-action.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-group-cancel.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-group-save.directive.ts","../../../projects/ngx-in-place-edit/src/lib/directives/editable-group-edit.directive.ts","../../../projects/ngx-in-place-edit/src/lib/editable/editable.module.ts","../../../projects/ngx-in-place-edit/src/public-api.ts","../../../projects/ngx-in-place-edit/src/ngx-in-place-edit.ts"],"sourcesContent":["import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[view]',\r\n})\r\nexport class ViewModeDirective {\r\n  constructor(public readonly tpl: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[edit]',\r\n})\r\nexport class EditModeDirective {\r\n  constructor(public readonly tpl: TemplateRef<any>) {}\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { TriggerEvents } from './editable.types';\r\n\r\nexport interface EditableConfig {\r\n  openOn?: TriggerEvents;\r\n  closeOn?: TriggerEvents;\r\n}\r\n\r\nexport const DEFAULT_CONFIG: EditableConfig = {\r\n  openOn: 'click',\r\n  closeOn: 'click',\r\n};\r\n\r\nexport const EDITABLE_CONFIG = new InjectionToken<EditableConfig>('editable.config', {\r\n  factory() {\r\n    return DEFAULT_CONFIG;\r\n  },\r\n});\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, fromEvent, Observable, Subject, Subscription } from 'rxjs';\r\nimport { filter, skip, switchMap, take, takeUntil, withLatestFrom } from 'rxjs/operators';\r\nimport { ViewModeDirective } from '../directives/view-mode.directive';\r\nimport { EditModeDirective } from '../directives/edit-mode.directive';\r\nimport { EDITABLE_CONFIG, EditableConfig } from './editable.config';\r\nimport { Mode } from './mode';\r\n\r\n@Component({\r\n  selector: 'ngx-inline-edit',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"(editMode$ | async) ? editModeTpl.tpl : viewModeTpl.tpl\"></ng-container>\r\n  `,\r\n  styles: [':host {cursor: pointer;}'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class EditableComponent implements OnInit, OnDestroy {\r\n  @Input() openOn = this.config.openOn;\r\n  @Input() closeOn = this.config.closeOn;\r\n\r\n  @Output() save: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() onStateChange: EventEmitter<Mode> = new EventEmitter<Mode>();\r\n\r\n  @ContentChild(ViewModeDirective) viewModeTpl: ViewModeDirective;\r\n  @ContentChild(EditModeDirective) editModeTpl: EditModeDirective;\r\n\r\n  private readonly editMode: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  public readonly editMode$: Observable<boolean> = this.editMode.asObservable();\r\n  public viewHandler: Subscription;\r\n  public editHandler: Subscription;\r\n  private destroy$: Subject<boolean> = new Subject<boolean>();\r\n  public isGrouped = false;\r\n\r\n  constructor(private readonly el: ElementRef, @Inject(EDITABLE_CONFIG) readonly config: EditableConfig) {}\r\n\r\n  private get element(): any {\r\n    return this.el.nativeElement;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleViewMode();\r\n    this.handleEditMode();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n  }\r\n\r\n  private handleViewMode(): void {\r\n    this.viewHandler = fromEvent(this.element, this.openOn)\r\n      .pipe(\r\n        withLatestFrom(this.editMode$),\r\n        filter(([_, editMode]) => !editMode),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => this.displayEditMode());\r\n  }\r\n\r\n  private handleEditMode(): void {\r\n    const clickOutside$ = (editMode: boolean) =>\r\n      fromEvent(document, this.closeOn).pipe(\r\n        filter(() => editMode),\r\n        /*\r\n        skip the first propagated event if there is a nested node in the viewMode templateRef\r\n        so it doesn't trigger this eventListener when switching to editMode\r\n         */\r\n        skip(this.openOn === this.closeOn ? 1 : 0),\r\n        filter(({ target }) => this.element.contains(target) === false),\r\n        take(1)\r\n      );\r\n\r\n    this.editHandler = this.editMode$\r\n      .pipe(\r\n        switchMap((editMode: boolean) => clickOutside$(editMode)),\r\n        takeUntil(this.destroy$)\r\n      )\r\n      .subscribe(() => this.saveEdit());\r\n  }\r\n\r\n  public displayEditMode(): void {\r\n    this.editMode.next(true);\r\n    this.onStateChange.emit('edit');\r\n  }\r\n\r\n  public saveEdit(): void {\r\n    this.save.next();\r\n    this.leaveEditMode();\r\n  }\r\n\r\n  public cancelEdit(): void {\r\n    this.cancel.next();\r\n    this.leaveEditMode();\r\n  }\r\n\r\n  private leaveEditMode(): void {\r\n    this.editMode.next(false);\r\n    this.onStateChange.emit('view');\r\n    if (!this.isGrouped) {\r\n      this.viewHandler.unsubscribe();\r\n      setTimeout(() => this.handleViewMode(), 0);\r\n    }\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { EditableComponent } from '../editable/editable.component';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[editableOnSave]',\r\n})\r\nexport class EditableSaveDirective implements OnInit, OnDestroy {\r\n  @Input() saveEvent = 'click';\r\n  private destroy$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private readonly editable: EditableComponent, private readonly el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, this.saveEvent)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.editable.saveEdit());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { EditableComponent } from '../editable/editable.component';\r\nimport { fromEvent, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[editableOnCancel]',\r\n})\r\nexport class EditableCancelDirective implements OnInit, OnDestroy {\r\n  @Input() cancelEvent = 'click';\r\n  private destroy$: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(private readonly editable: EditableComponent, private el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    fromEvent(this.el.nativeElement, this.cancelEvent)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.editable.cancelEdit());\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next(true);\r\n  }\r\n}\r\n","import { Directive, ElementRef, OnInit } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[editableFocusable]',\r\n})\r\nexport class EditableFocusDirective implements OnInit {\r\n  constructor(private readonly el: ElementRef) {}\r\n\r\n  ngOnInit(): void {\r\n    this.el.nativeElement.focus();\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { EditableComponent } from '../editable/editable.component';\r\n\r\n@Directive({\r\n  selector: '[editableOnEnter]',\r\n})\r\nexport class EditableOnEnterDirective {\r\n  constructor(private readonly editable: EditableComponent) {}\r\n\r\n  @HostListener('keyup.enter')\r\n  onEnter(): void {\r\n    this.editable.saveEdit();\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { EditableComponent } from '../editable/editable.component';\r\n\r\n@Directive({\r\n  selector: '[editableOnEscape]',\r\n})\r\nexport class EditableOnEscapeDirective {\r\n  constructor(private readonly editable: EditableComponent) {}\r\n\r\n  @HostListener('keyup.escape')\r\n  onEnter(): void {\r\n    this.editable.cancelEdit();\r\n  }\r\n}\r\n","import { AfterViewInit, ContentChildren, Directive, EventEmitter, Output, QueryList } from '@angular/core';\r\nimport { EditableComponent } from '../editable/editable.component';\r\nimport { Mode } from '../editable/mode';\r\n\r\n@Directive({\r\n  selector: '[editableGroup]',\r\n})\r\nexport class EditableGroupDirective implements AfterViewInit {\r\n  @ContentChildren(EditableComponent, { descendants: true }) children: QueryList<EditableComponent>;\r\n\r\n  @Output() save: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() cancel: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() editableModeChange: EventEmitter<Mode> = new EventEmitter<Mode>();\r\n\r\n  ngAfterViewInit(): void {\r\n    this.children.forEach((child) => (child.isGrouped = true));\r\n    this.children.forEach((child) => child.viewHandler.unsubscribe());\r\n    this.children.forEach((child) => child.editHandler.unsubscribe());\r\n  }\r\n\r\n  displayEditMode(): void {\r\n    this.editableModeChange.emit('edit');\r\n    this.children.forEach((child) => child.displayEditMode());\r\n  }\r\n\r\n  saveEdit(): void {\r\n    this.editableModeChange.emit('view');\r\n    this.children.forEach((child) => child.saveEdit());\r\n    this.save.emit();\r\n  }\r\n\r\n  cancelEdit(): void {\r\n    this.editableModeChange.emit('view');\r\n    this.children.forEach((child) => child.cancelEdit());\r\n    this.cancel.emit();\r\n  }\r\n}\r\n","import { Directive } from '@angular/core';\r\nimport { EditableGroupDirective } from './editable-group.directive';\r\n\r\n@Directive({\r\n  selector: '[]',\r\n})\r\nexport class EditableGroupActionDirective {\r\n  constructor(protected readonly group: EditableGroupDirective) {}\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { EditableGroupActionDirective } from './editable-group-action.directive';\r\n\r\n@Directive({\r\n  selector: '[editableGroupCancel]',\r\n})\r\nexport class EditableGroupCancelDirective extends EditableGroupActionDirective {\r\n  @HostListener('click')\r\n  onClick(): void {\r\n    this.group.cancelEdit();\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { EditableGroupActionDirective } from './editable-group-action.directive';\r\n\r\n@Directive({\r\n  selector: '[editableGroupSave]',\r\n})\r\nexport class EditableGroupSaveDirective extends EditableGroupActionDirective {\r\n  @HostListener('click')\r\n  onClick(): void {\r\n    this.group.saveEdit();\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\nimport { EditableGroupActionDirective } from './editable-group-action.directive';\r\n\r\n@Directive({\r\n  selector: '[editableGroupEdit]',\r\n})\r\nexport class EditableGroupEditDirective extends EditableGroupActionDirective {\r\n  @HostListener('click')\r\n  onClick(): void {\r\n    this.group.displayEditMode();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { EditableComponent } from './editable.component';\r\nimport { ViewModeDirective } from '../directives/view-mode.directive';\r\nimport { EditModeDirective } from '../directives/edit-mode.directive';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EditableSaveDirective } from '../directives/editable-save.directive';\r\nimport { EditableCancelDirective } from '../directives/editable-cancel.directive';\r\nimport { EditableFocusDirective } from '../directives/editable-focus.directive';\r\nimport { EditableOnEnterDirective } from '../directives/editable-on-enter.directive';\r\nimport { EditableOnEscapeDirective } from '../directives/editable-on-escape.directive';\r\nimport { EditableGroupDirective } from '../directives/editable-group.directive';\r\nimport { EditableGroupCancelDirective } from '../directives/editable-group-cancel.directive';\r\nimport { EditableGroupSaveDirective } from '../directives/editable-group-save.directive';\r\nimport { EditableGroupEditDirective } from '../directives/editable-group-edit.directive';\r\nimport { EditableGroupActionDirective } from '../directives/editable-group-action.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    EditableComponent,\r\n    ViewModeDirective,\r\n    EditModeDirective,\r\n    EditableSaveDirective,\r\n    EditableCancelDirective,\r\n    EditableFocusDirective,\r\n    EditableOnEnterDirective,\r\n    EditableOnEscapeDirective,\r\n    EditableGroupDirective,\r\n    EditableGroupCancelDirective,\r\n    EditableGroupSaveDirective,\r\n    EditableGroupEditDirective,\r\n    EditableGroupActionDirective,\r\n  ],\r\n  imports: [CommonModule],\r\n  exports: [\r\n    EditableComponent,\r\n    ViewModeDirective,\r\n    EditModeDirective,\r\n    EditableSaveDirective,\r\n    EditableCancelDirective,\r\n    EditableFocusDirective,\r\n    EditableOnEnterDirective,\r\n    EditableOnEscapeDirective,\r\n    EditableGroupDirective,\r\n    EditableGroupEditDirective,\r\n    EditableGroupSaveDirective,\r\n    EditableGroupCancelDirective,\r\n  ],\r\n})\r\nexport class InlineEditModule {}\r\n","/*\r\n * Public API Surface of edit-in-place\r\n */\r\n\r\nexport * from './lib/editable/editable.module';\r\nexport * from './lib/editable/editable.config';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {EditModeDirective as ɵc} from './lib/directives/edit-mode.directive';\nexport {EditableCancelDirective as ɵe} from './lib/directives/editable-cancel.directive';\nexport {EditableFocusDirective as ɵf} from './lib/directives/editable-focus.directive';\nexport {EditableGroupActionDirective as ɵk} from './lib/directives/editable-group-action.directive';\nexport {EditableGroupCancelDirective as ɵj} from './lib/directives/editable-group-cancel.directive';\nexport {EditableGroupEditDirective as ɵm} from './lib/directives/editable-group-edit.directive';\nexport {EditableGroupSaveDirective as ɵl} from './lib/directives/editable-group-save.directive';\nexport {EditableGroupDirective as ɵi} from './lib/directives/editable-group.directive';\nexport {EditableOnEnterDirective as ɵg} from './lib/directives/editable-on-enter.directive';\nexport {EditableOnEscapeDirective as ɵh} from './lib/directives/editable-on-escape.directive';\nexport {EditableSaveDirective as ɵd} from './lib/directives/editable-save.directive';\nexport {ViewModeDirective as ɵb} from './lib/directives/view-mode.directive';\nexport {EditableComponent as ɵa} from './lib/editable/editable.component';"],"names":[],"mappings":";;;;;MAKa,iBAAiB;IAC5B,YAA4B,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;KAAI;;;YAJtD,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;aACnB;;;YAJmB,WAAW;;;MCKlB,iBAAiB;IAC5B,YAA4B,GAAqB;QAArB,QAAG,GAAH,GAAG,CAAkB;KAAI;;;YAJtD,SAAS,SAAC;gBACT,QAAQ,EAAE,QAAQ;aACnB;;;YAJmB,WAAW;;;MCQlB,cAAc,GAAmB;IAC5C,MAAM,EAAE,OAAO;IACf,OAAO,EAAE,OAAO;EAChB;MAEW,eAAe,GAAG,IAAI,cAAc,CAAiB,iBAAiB,EAAE;IACnF,OAAO;QACL,OAAO,cAAc,CAAC;KACvB;CACF;;MCUY,iBAAiB;IAkB5B,YAA6B,EAAc,EAAoC,MAAsB;QAAxE,OAAE,GAAF,EAAE,CAAY;QAAoC,WAAM,GAAN,MAAM,CAAgB;QAjB5F,WAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAC5B,YAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAE7B,SAAI,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACpD,WAAM,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACtD,kBAAa,GAAuB,IAAI,YAAY,EAAQ,CAAC;QAKtD,aAAQ,GAA6B,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAC1E,cAAS,GAAwB,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC;QAGtE,aAAQ,GAAqB,IAAI,OAAO,EAAW,CAAC;QACrD,cAAS,GAAG,KAAK,CAAC;KAEgF;IAEzG,IAAY,OAAO;QACjB,OAAO,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;KAC9B;IAED,QAAQ;QACN,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,cAAc,EAAE,CAAC;KACvB;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAEO,cAAc;QACpB,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC;aACpD,IAAI,CACH,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,EAC9B,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,EACpC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KAC5C;IAEO,cAAc;QACpB,MAAM,aAAa,GAAG,CAAC,QAAiB,KACtC,SAAS,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CACpC,MAAM,CAAC,MAAM,QAAQ,CAAC;;;;;QAKtB,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1C,MAAM,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,EAC/D,IAAI,CAAC,CAAC,CAAC,CACR,CAAC;QAEJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS;aAC9B,IAAI,CACH,SAAS,CAAC,CAAC,QAAiB,KAAK,aAAa,CAAC,QAAQ,CAAC,CAAC,EACzD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACA,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;KACrC;IAEM,eAAe;QACpB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACjC;IAEM,QAAQ;QACb,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEM,UAAU;QACf,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAEO,aAAa;QACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;YAC/B,UAAU,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,CAAC,CAAC;SAC5C;KACF;;;YA9FF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,QAAQ,EAAE;;GAET;gBAED,eAAe,EAAE,uBAAuB,CAAC,MAAM;yBADtC,0BAA0B;aAEpC;;;YAtBC,UAAU;4CAyCoC,MAAM,SAAC,eAAe;;;qBAjBnE,KAAK;sBACL,KAAK;mBAEL,MAAM;qBACN,MAAM;4BACN,MAAM;0BAEN,YAAY,SAAC,iBAAiB;0BAC9B,YAAY,SAAC,iBAAiB;;;MC5BpB,qBAAqB;IAIhC,YAA6B,QAA2B,EAAmB,EAAc;QAA5D,aAAQ,GAAR,QAAQ,CAAmB;QAAmB,OAAE,GAAF,EAAE,CAAY;QAHhF,cAAS,GAAG,OAAO,CAAC;QACrB,aAAQ,GAAqB,IAAI,OAAO,EAAW,CAAC;KAEiC;IAE7F,QAAQ;QACN,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC;aAC7C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC;KAC9C;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;;;YAjBF,SAAS,SAAC;gBACT,QAAQ,EAAE,kBAAkB;aAC7B;;;YANQ,iBAAiB;YADN,UAAU;;;wBAS3B,KAAK;;;MCDK,uBAAuB;IAIlC,YAA6B,QAA2B,EAAU,EAAc;QAAnD,aAAQ,GAAR,QAAQ,CAAmB;QAAU,OAAE,GAAF,EAAE,CAAY;QAHvE,gBAAW,GAAG,OAAO,CAAC;QACvB,aAAQ,GAAqB,IAAI,OAAO,EAAW,CAAC;KAEwB;IAEpF,QAAQ;QACN,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;aAC/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;KAChD;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;;;YAjBF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;;YANQ,iBAAiB;YADN,UAAU;;;0BAS3B,KAAK;;;MCJK,sBAAsB;IACjC,YAA6B,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;KAAI;IAE/C,QAAQ;QACN,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KAC/B;;;YARF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;aAChC;;;YAJmB,UAAU;;;MCMjB,wBAAwB;IACnC,YAA6B,QAA2B;QAA3B,aAAQ,GAAR,QAAQ,CAAmB;KAAI;IAG5D,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;YATF,SAAS,SAAC;gBACT,QAAQ,EAAE,mBAAmB;aAC9B;;;YAJQ,iBAAiB;;;sBAQvB,YAAY,SAAC,aAAa;;;MCHhB,yBAAyB;IACpC,YAA6B,QAA2B;QAA3B,aAAQ,GAAR,QAAQ,CAAmB;KAAI;IAG5D,OAAO;QACL,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;KAC5B;;;YATF,SAAS,SAAC;gBACT,QAAQ,EAAE,oBAAoB;aAC/B;;;YAJQ,iBAAiB;;;sBAQvB,YAAY,SAAC,cAAc;;;MCFjB,sBAAsB;IAHnC;QAMY,SAAI,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACpD,WAAM,GAAuB,IAAI,YAAY,EAAQ,CAAC;QACtD,uBAAkB,GAAuB,IAAI,YAAY,EAAQ,CAAC;KAwB7E;IAtBC,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,MAAM,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;KACnE;IAED,eAAe;QACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC;KAC3D;IAED,QAAQ;QACN,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KAClB;IAED,UAAU;QACR,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,KAAK,KAAK,KAAK,CAAC,UAAU,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;KACpB;;;YA/BF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;aAC5B;;;uBAEE,eAAe,SAAC,iBAAiB,EAAE,EAAE,WAAW,EAAE,IAAI,EAAE;mBAExD,MAAM;qBACN,MAAM;iCACN,MAAM;;;MCNI,4BAA4B;IACvC,YAA+B,KAA6B;QAA7B,UAAK,GAAL,KAAK,CAAwB;KAAI;;;YAJjE,SAAS,SAAC;gBACT,QAAQ,EAAE,IAAI;aACf;;;YAJQ,sBAAsB;;;MCKlB,4BAA6B,SAAQ,4BAA4B;IAE5E,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;KACzB;;;YAPF,SAAS,SAAC;gBACT,QAAQ,EAAE,uBAAuB;aAClC;;;sBAEE,YAAY,SAAC,OAAO;;;MCDV,0BAA2B,SAAQ,4BAA4B;IAE1E,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;KACvB;;;YAPF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;aAChC;;;sBAEE,YAAY,SAAC,OAAO;;;MCDV,0BAA2B,SAAQ,4BAA4B;IAE1E,OAAO;QACL,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC;KAC9B;;;YAPF,SAAS,SAAC;gBACT,QAAQ,EAAE,qBAAqB;aAChC;;;sBAEE,YAAY,SAAC,OAAO;;;MCyCV,gBAAgB;;;YAhC5B,QAAQ,SAAC;gBACR,YAAY,EAAE;oBACZ,iBAAiB;oBACjB,iBAAiB;oBACjB,iBAAiB;oBACjB,qBAAqB;oBACrB,uBAAuB;oBACvB,sBAAsB;oBACtB,wBAAwB;oBACxB,yBAAyB;oBACzB,sBAAsB;oBACtB,4BAA4B;oBAC5B,0BAA0B;oBAC1B,0BAA0B;oBAC1B,4BAA4B;iBAC7B;gBACD,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE;oBACP,iBAAiB;oBACjB,iBAAiB;oBACjB,iBAAiB;oBACjB,qBAAqB;oBACrB,uBAAuB;oBACvB,sBAAsB;oBACtB,wBAAwB;oBACxB,yBAAyB;oBACzB,sBAAsB;oBACtB,0BAA0B;oBAC1B,0BAA0B;oBAC1B,4BAA4B;iBAC7B;aACF;;;AC/CD;;;;ACAA;;;;;;"}